{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","Components/SigninForm/Signin.js","Components/Registration/Registration.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedin","style","display","flexDirection","onClick","className","Logo","options","max","height","width","src","alt","ImageLinkForm","onInputChange","onButtonSubmit","justifyContent","type","onChange","Rank","name","entires","console","log","FaceRecognition","imageUrl","box","alignItems","marginTop","id","top","toprow","right","rightcol","bottom","bottomrow","left","leftcol","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onUserSignin","state","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","this","class","htmlFor","React","Component","Registration","onUsernameRegister","registerUsername","onEmailRegister","registerEmail","onPasswordRegister","registerPassword","onRegister","username","user","loadUser","app","Clarifai","App","apiKey","particles","polygon","enable","move","radius","url","calculateFacelocation","clarafaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","right_col","top_row","bottom_row","displayFaceBox","input","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","err","route","joined","Date","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.412273c7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedin }) => {\r\n  if (isSignedin) {\r\n    return (\r\n      <nav\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row-reverse\",\r\n        }}\r\n      >\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\" f3 link dim black pa3 ba bw2 mt2 mr5 br-pill shadow-5 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row-reverse\",\r\n        }}\r\n      >\r\n        <p\r\n          onClick={() => onRouteChange(\"signin\")}\r\n          className=\" f3 link dim black pa3 ba bw2 mt2 mr5 br-pill shadow-5 pointer\"\r\n        >\r\n          Sign In\r\n        </p>\r\n        <p\r\n          onClick={() => onRouteChange(\"register\")}\r\n          className=\" f3 link dim black pa3 ba bw2 mt2 mr5 br-pill shadow-5 pointer\"\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"./logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0\">\r\n      <Tilt\r\n        className=\"Tilt br5 shadow-2\"\r\n        options={{ max: 25 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner br-3\">\r\n          <img\r\n            src=\"https://cdn-icons-png.flaticon.com/512/3480/3480109.png\"\r\n            alt=\"logo\"\r\n          />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./imagelinkform.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">{\"This is a Smart Image Checker.Try Itttttt!!!\"}</p>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <div className=\"form pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4 pa2 center w-70\"\r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          ></input>\r\n          <button\r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-navy pointer\"\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = ({ name, entires }) => {\r\n  console.log(name);\r\n  return (\r\n    <div className=\"ma4 mt0\">\r\n      <div className=\"black f3\">\r\n        {{ name } + \" Your Current Entry count is ....\"}\r\n      </div>\r\n      <div className=\"white f1\">{entires}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  console.log(\"checking image url\");\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 30,\r\n      }}\r\n    >\r\n      <div className=\"mt2\">\r\n        <img\r\n          id=\"inputimage\"\r\n          alt=\" \"\r\n          src={imageUrl}\r\n          width=\"600px\"\r\n          height=\"auto\"\r\n        />\r\n        <div\r\n          className=\"facebox\"\r\n          style={{\r\n            top: box.toprow,\r\n            right: box.rightcol,\r\n            bottom: box.bottomrow,\r\n            left: box.leftcol,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from \"react\";\r\nimport \"./Signin.css\";\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onUserSignin = () => {\r\n    console.log(this.state);\r\n    fetch(\"http://localhost:3000/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/JSON\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json)\r\n      .then((data) => {\r\n        if (data === \"user signed in\") {\r\n          this.props.onRouteChange(\"home\"); //validation not working need to check why ??\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"mw6 center black br3 pa3 pa4-ns mv3 ba shadow-5 b--black-10\">\r\n        <main className=\"pa4 black-80\">\r\n          <form className=\"measure center\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n              <div class=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f4\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onUserSignin}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 fw6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3 \">\r\n              <input\r\n                onClick={() => onRouteChange(\"register\")}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 fw6 pointer dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\n\r\nclass Registration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      registerEmail: \"\",\r\n      registerPassword: \"\",\r\n      registerUsername: \"\",\r\n    };\r\n  }\r\n\r\n  onUsernameRegister = (event) => {\r\n    this.setState({ registerUsername: event.target.value });\r\n  };\r\n\r\n  onEmailRegister = (event) => {\r\n    this.setState({ registerEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordRegister = (event) => {\r\n    this.setState({ registerPassword: event.target.value });\r\n  };\r\n\r\n  onRegister = () => {\r\n    console.log(this.state);\r\n    fetch(\"http://localhost:3000/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/JSON\" },\r\n      body: JSON.stringify({\r\n        username: this.state.registerUsername,\r\n        email: this.state.registerEmail,\r\n        password: this.state.registerPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json)\r\n      .then((user) => {\r\n        if (user) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\"); //validation not working need to check why ??\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"mw6 center black br3 pa3 pa4-ns mv3 ba shadow-5 b--black-10\">\r\n        <main className=\"pa4 black-80\">\r\n          <form className=\"measure center\">\r\n            <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f2 fw6 ph0 mh0\">Register Here</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f4\" htmlFor=\"user-name\">\r\n                  Username\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"user-name\"\r\n                  id=\"user-name\"\r\n                  onChange={this.onUsernameRegister}\r\n                />\r\n\r\n                <label className=\"db fw6 lh-copy f4\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailRegister}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f4\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordRegister}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 fw6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n                onClick={this.onRegister}\r\n              />\r\n            </div>\r\n          </form>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n","import \"./App.css\";\nimport Clarifai from \"clarifai\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport \"tachyons\";\nimport Particles from \"react-particles-js\";\nimport { Component } from \"react\";\nimport Signin from \"./Components/SigninForm/Signin\";\nimport Registration from \"./Components/Registration/Registration\";\n\n/*style={{\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  flexDirection: \"row-reverse\",\n  marginTop: 20,\n}}*\n*/\n//const Clarifai = require(\"clarifai\");\n//https://samples.clarifai.com/face-det.jpg\n\nconst app = new Clarifai.App({\n  apiKey: \"8d5988380062411993bf7db922253212\",\n});\nconsole.log(\"checking app\", app);\n\nconst particles = {\n  polygon: {\n    enable: true,\n    type: \"inside\",\n    move: {\n      radius: 10,\n    },\n    url: \"path/to/svg.svg\",\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"home\",\n      isSignedin: false,\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entires: 0,\n        joined: new Date(),\n      },\n    };\n  }\n\n  // checking if the connection to server works.\n  /* componentDidMount() {\n    fetch(\"http://localhost:3000\")\n      .then((response) => response.json())\n      .then(console.log);\n  }*/\n\n  calculateFacelocation = (data) => {\n    const clarafaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    console.log(clarafaiFace);\n    return {\n      leftcol: clarafaiFace.left_col * width,\n      rightcol: width - clarafaiFace.right_col * width,\n      toprow: clarafaiFace.top_row * height,\n      bottomrow: height - clarafaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    console.log(\"this is on input change\");\n    this.setState({ input: event.target.value });\n    console.log(this.state.input);\n  };\n\n  onButtonSubmit = () => {\n    console.log(\"on button click\");\n    this.setState({ imageUrl: this.state.input });\n    console.log(this.state.imageUrl);\n\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) => {\n        if (response) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/JSON\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entires: count }));\n            });\n        }\n        this.displayFaceBox(this.calculateFacelocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    console.log(route);\n    if (route === \"signout\") {\n      this.setState({ isSignedin: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignedin: true });\n    } else {\n      this.setState({ route: route });\n    }\n  };\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entires: data.entires,\n        joined: data.joined,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles params={particles} className=\"particles\" />\n        <Navigation\n          isSignedin={this.state.isSignedin}\n          onRouteChange={this.onRouteChange}\n        />\n\n        {this.state.route === \"home\" ? ( //need to revisit conditional\n          <div>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entires={this.state.user.entires}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition\n              imageUrl={this.state.imageUrl}\n              box={this.state.box}\n            />\n          </div>\n        ) : this.state.route === \"signin\" ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Registration\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}